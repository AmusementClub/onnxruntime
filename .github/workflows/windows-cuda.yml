name: Build (Windows, CUDA)

on: [push, workflow_dispatch]

jobs:
  build-windows:
    runs-on: windows-2022

    defaults:
      run:
        shell: cmd

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive
        # master
        ref: 164de82644cb9435c6d90b595403cf05dbae029f
        fetch-depth: 0

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup Ninja
      run: pip install ninja

    - name: Cache CUDA
      id: cache-cuda
      uses: actions/cache@v3
      with:
        path: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA
        key: ${{ runner.os }}-cuda-11.8.0

    - name: Setup CUDA
      if: steps.cache-cuda.outputs.cache-hit != 'true'
      run: |
        curl -s -o cuda_installer.exe -L https://developer.download.nvidia.com/compute/cuda/11.8.0/network_installers/cuda_11.8.0_windows_network.exe
        cuda_installer.exe -s nvcc_11.8 cudart_11.8 cublas_dev_11.8 cufft_dev_11.8 curand_dev_11.8 cusparse_dev_11.8 cupti_11.8 thrust_11.8

    - name: Checkout cuda
      uses: actions/checkout@v2
      with:
        repository: AmusementClub/cuda
        token: ${{ secrets.REPO_TOKEN }}
        ref: cudnn-8.6.0
        path: cuda

    - name: Configure
      run: cmake -S cmake -B build -G Ninja -LA
        -D CMAKE_BUILD_TYPE=Release
        -D CMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded -D ONNX_USE_MSVC_STATIC_RUNTIME=ON
        -D onnxruntime_BUILD_UNIT_TESTS=OFF -D Protobuf_USE_STATIC_LIBS=ON -D onnxruntime_BUILD_SHARED_LIB=ON
        -D onnxruntime_ENABLE_CPU_FP16_OPS=OFF -D onnxruntime_USE_AVX=ON
        -D onnxruntime_USE_CUDA=ON -D onnxruntime_CUDA_HOME="%CUDA_PATH%" -D onnxruntime_CUDNN_HOME="%cd%\cuda\cudnn"
        -D CMAKE_CUDA_ARCHITECTURES="50;61-real;75-real;86-real;89-real" -D CMAKE_CUDA_FLAGS="-t 0 -Wno-deprecated-gpu-targets -use_fast_math"
        -D CMAKE_DISABLE_FIND_PACKAGE_Patch=ON
      env:
        CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8

    - name: Build
      run: cmake --build build

    - name: Install
      run: cmake --install build --prefix onnxruntime-gpu

    - name: Show
      run: ls -R onnxruntime-gpu

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: onnxruntime-windows-cuda
        retention-days: 1
        path: onnxruntime-gpu

    - name: Package
      shell: pwsh
      run: Compress-Archive onnxruntime-gpu -DestinationPath onnxruntime-gpu-win64.zip

    - name: Get description
      shell: bash
      run: |
        echo ORT_VERSION=`git describe` >> $GITHUB_ENV
        echo TIME=`date -u +"%y%m%d-%H%M"` >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: onnxruntime-gpu-win64.zip
        name: Build ${{ env.ORT_VERSION }}
        tag_name: ${{ env.ORT_VERSION }}-${{ env.TIME }}
        prerelease: true
